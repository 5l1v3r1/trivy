// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/detector/service.proto

package detector

import (
	fmt "fmt"
	common "github.com/aquasecurity/trivy/rpc/common"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OSDetectRequest struct {
	OsFamily             string            `protobuf:"bytes,1,opt,name=os_family,json=osFamily,proto3" json:"os_family,omitempty"`
	OsName               string            `protobuf:"bytes,2,opt,name=os_name,json=osName,proto3" json:"os_name,omitempty"`
	Packages             []*common.Package `protobuf:"bytes,3,rep,name=packages,proto3" json:"packages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *OSDetectRequest) Reset()         { *m = OSDetectRequest{} }
func (m *OSDetectRequest) String() string { return proto.CompactTextString(m) }
func (*OSDetectRequest) ProtoMessage()    {}
func (*OSDetectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_93e16dbd737b8924, []int{0}
}

func (m *OSDetectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OSDetectRequest.Unmarshal(m, b)
}
func (m *OSDetectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OSDetectRequest.Marshal(b, m, deterministic)
}
func (m *OSDetectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OSDetectRequest.Merge(m, src)
}
func (m *OSDetectRequest) XXX_Size() int {
	return xxx_messageInfo_OSDetectRequest.Size(m)
}
func (m *OSDetectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OSDetectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OSDetectRequest proto.InternalMessageInfo

func (m *OSDetectRequest) GetOsFamily() string {
	if m != nil {
		return m.OsFamily
	}
	return ""
}

func (m *OSDetectRequest) GetOsName() string {
	if m != nil {
		return m.OsName
	}
	return ""
}

func (m *OSDetectRequest) GetPackages() []*common.Package {
	if m != nil {
		return m.Packages
	}
	return nil
}

type DetectResponse struct {
	Vulnerabilities      []*common.Vulnerability `protobuf:"bytes,1,rep,name=vulnerabilities,proto3" json:"vulnerabilities,omitempty"`
	Eosl                 bool                    `protobuf:"varint,2,opt,name=eosl,proto3" json:"eosl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *DetectResponse) Reset()         { *m = DetectResponse{} }
func (m *DetectResponse) String() string { return proto.CompactTextString(m) }
func (*DetectResponse) ProtoMessage()    {}
func (*DetectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_93e16dbd737b8924, []int{1}
}

func (m *DetectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectResponse.Unmarshal(m, b)
}
func (m *DetectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectResponse.Marshal(b, m, deterministic)
}
func (m *DetectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectResponse.Merge(m, src)
}
func (m *DetectResponse) XXX_Size() int {
	return xxx_messageInfo_DetectResponse.Size(m)
}
func (m *DetectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DetectResponse proto.InternalMessageInfo

func (m *DetectResponse) GetVulnerabilities() []*common.Vulnerability {
	if m != nil {
		return m.Vulnerabilities
	}
	return nil
}

func (m *DetectResponse) GetEosl() bool {
	if m != nil {
		return m.Eosl
	}
	return false
}

type LibDetectRequest struct {
	FilePath             string            `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	Libraries            []*common.Library `protobuf:"bytes,2,rep,name=libraries,proto3" json:"libraries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *LibDetectRequest) Reset()         { *m = LibDetectRequest{} }
func (m *LibDetectRequest) String() string { return proto.CompactTextString(m) }
func (*LibDetectRequest) ProtoMessage()    {}
func (*LibDetectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_93e16dbd737b8924, []int{2}
}

func (m *LibDetectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LibDetectRequest.Unmarshal(m, b)
}
func (m *LibDetectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LibDetectRequest.Marshal(b, m, deterministic)
}
func (m *LibDetectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LibDetectRequest.Merge(m, src)
}
func (m *LibDetectRequest) XXX_Size() int {
	return xxx_messageInfo_LibDetectRequest.Size(m)
}
func (m *LibDetectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LibDetectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LibDetectRequest proto.InternalMessageInfo

func (m *LibDetectRequest) GetFilePath() string {
	if m != nil {
		return m.FilePath
	}
	return ""
}

func (m *LibDetectRequest) GetLibraries() []*common.Library {
	if m != nil {
		return m.Libraries
	}
	return nil
}

func init() {
	proto.RegisterType((*OSDetectRequest)(nil), "trivy.detector.OSDetectRequest")
	proto.RegisterType((*DetectResponse)(nil), "trivy.detector.DetectResponse")
	proto.RegisterType((*LibDetectRequest)(nil), "trivy.detector.LibDetectRequest")
}

func init() { proto.RegisterFile("rpc/detector/service.proto", fileDescriptor_93e16dbd737b8924) }

var fileDescriptor_93e16dbd737b8924 = []byte{
	// 345 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x61, 0x6b, 0xe2, 0x40,
	0x10, 0x45, 0x3d, 0xbc, 0x38, 0x82, 0x1e, 0x0b, 0xc7, 0x05, 0x85, 0xab, 0xf8, 0xc9, 0x4f, 0x09,
	0x55, 0xe8, 0x0f, 0x28, 0x6d, 0xa1, 0x45, 0x5a, 0x49, 0xa1, 0xa5, 0xfd, 0x22, 0x9b, 0x75, 0xd4,
	0xc5, 0x24, 0x13, 0x77, 0x37, 0x42, 0xfa, 0xeb, 0x8b, 0x1b, 0x62, 0x9b, 0xb4, 0xd0, 0x6f, 0xb3,
	0xfb, 0xde, 0xbc, 0x79, 0x6f, 0x76, 0x61, 0xa0, 0x52, 0xe1, 0xaf, 0xd0, 0xa0, 0x30, 0xa4, 0x7c,
	0x8d, 0xea, 0x20, 0x05, 0x7a, 0xa9, 0x22, 0x43, 0xac, 0x67, 0x94, 0x3c, 0xe4, 0x5e, 0x89, 0x0e,
	0x2e, 0x36, 0xd2, 0x6c, 0xb3, 0xd0, 0x13, 0x14, 0xfb, 0x7c, 0x9f, 0x71, 0x8d, 0x22, 0x53, 0xd2,
	0xe4, 0xbe, 0xe5, 0xf9, 0x47, 0x25, 0x41, 0x71, 0x4c, 0x49, 0x55, 0x67, 0xfc, 0x06, 0xfd, 0x87,
	0xc7, 0x2b, 0xab, 0x12, 0xe0, 0x3e, 0x43, 0x6d, 0xd8, 0x10, 0x3a, 0xa4, 0x97, 0x6b, 0x1e, 0xcb,
	0x28, 0x77, 0x1b, 0xa3, 0xc6, 0xa4, 0x13, 0x38, 0xa4, 0x6f, 0xec, 0x99, 0xfd, 0x83, 0xdf, 0xa4,
	0x97, 0x09, 0x8f, 0xd1, 0x6d, 0x5a, 0xa8, 0x4d, 0xfa, 0x9e, 0xc7, 0xc8, 0xce, 0xc1, 0x49, 0xb9,
	0xd8, 0xf1, 0x0d, 0x6a, 0xb7, 0x35, 0x6a, 0x4d, 0xba, 0xd3, 0xbf, 0x5e, 0xe1, 0xb1, 0x98, 0xeb,
	0x2d, 0x0a, 0x34, 0x38, 0xd1, 0xc6, 0x3b, 0xe8, 0x95, 0x93, 0x75, 0x4a, 0x89, 0x46, 0x76, 0x0d,
	0xfd, 0x43, 0x16, 0x25, 0xa8, 0x78, 0x28, 0x23, 0x69, 0x24, 0x6a, 0xb7, 0x61, 0xb5, 0x86, 0x55,
	0xad, 0xa7, 0x4f, 0xa4, 0x3c, 0xa8, 0xf7, 0x30, 0x06, 0xbf, 0x90, 0x74, 0x64, 0x1d, 0x3a, 0x81,
	0xad, 0xc7, 0x2b, 0xf8, 0x33, 0x97, 0xe1, 0x97, 0xa4, 0x6b, 0x19, 0xe1, 0x32, 0xe5, 0x66, 0x5b,
	0x26, 0x3d, 0x5e, 0x2c, 0xb8, 0xd9, 0xb2, 0x19, 0x74, 0x22, 0x19, 0x2a, 0xae, 0x8e, 0x2e, 0x9a,
	0xdf, 0x25, 0x9a, 0x5b, 0x38, 0x0f, 0x3e, 0x78, 0xd3, 0x67, 0x80, 0x72, 0x9d, 0xa4, 0xd8, 0x2d,
	0xb4, 0x8b, 0x9a, 0x9d, 0x79, 0xd5, 0xf7, 0xf2, 0x6a, 0x4b, 0x1f, 0xfc, 0xaf, 0x13, 0xaa, 0x9b,
	0x99, 0xbe, 0x40, 0xf7, 0x64, 0x9f, 0x14, 0xbb, 0x3b, 0x29, 0x8f, 0xea, 0x8d, 0xf5, 0x94, 0x3f,
	0x49, 0x5f, 0xc2, 0xab, 0x53, 0x42, 0x61, 0xdb, 0xfe, 0x8a, 0xd9, 0x7b, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x24, 0xda, 0xca, 0xd3, 0x7b, 0x02, 0x00, 0x00,
}
